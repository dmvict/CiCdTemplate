
name : auto_merge_to_beta

on :
  push :
    branches : [ alpha ]

jobs :
  wait_for_modules :
    runs-on : ubuntu-latest
    steps :
      - name : Waiting ...
        uses : willgarcia/workflow-wait-action@main
        with :
          timeout : 6000
          interval : 10
          initial_delay : 30
          workflows : |
            module1
            module2

  check :
    needs : wait_for_modules
    strategy :
      matrix :
        modules :
          - ModuleModule1Push
          - ModuleModule2Push
    runs-on : ubuntu-latest
    steps :
      - name : Check workflow run status
        id : check_ci
        uses :  LASER-Yi/workflow-status@v0.1.0
        with :
          token : ${{ secrets.GITHUB_TOKEN }}
          workflow : ${{ matrix.modules }}.yml
          event : push
          branch : exp
      - name : Check conclusion
        if : ${{ steps.check_ci.outputs.conclusion == 'failure' }}
        run : exit 1

  merge :
    needs : check
    if : ${{ success() }}
    runs-on : ubuntu-latest
    steps :
      - name : Find PR number for current commit
        uses : jwalton/gh-find-current-pr@v1
        id : find
        with :
          state: open
      - name: Automerge passed pull request
        if : ${{ success() }}
        uses: juliangruber/merge-pull-request-action@v1
        with:
          github-token: ${{ secrets.PRIVATE_GITHUB_BOT_TOKEN }}
          number: ${{ steps.find.outputs.number }}
          method: merge

  convert_to_draft :
    needs : check
    if : ${{ failure() || cancelled() }}
    runs-on : ubuntu-latest
    steps :
      - name : Find PR number for current commit
        uses : jwalton/gh-find-current-pr@v1
        id : find
        with :
          state: open
      - name : Get PR node id
        id : node_id
        run : |
          node_id=$(curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token "${{ secrets.GITHUB_TOKEN }}""} \
          https://api.github.com/repos/${{ github.repository }}/pulls/${{ steps.find.outputs.number }} \
          | jq -r .node_id)
          echo "::set-output name=id::$node_id"
      - name: Convert to draft
        if : ${{ success() }}
        uses : voiceflow/draft-pr@latest
        with :
          token : ${{ secrets.PRIVATE_GITHUB_TOKEN }}
          pull-request-node-id : ${{ steps.node_id.outputs.id }}
