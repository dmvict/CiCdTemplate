
name : status_checks_rules_update

on :
  pull_request :
    types : [ opened ]
    branch : beta

concurrency :

  group : projected_rules_update
  cancel-in-progress : true

jobs :

  check_workflows :
    outputs :
      should_update : ${{ steps.compare.outputs.not_equal }}
    runs-on : ubuntu-latest
    steps :
      - name : Compare workflow directories content
        id : compare
        run : |
          files_beta=$(curl -X GET -G \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PRIVATE_GITHUB_BOT_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/contents/.github/workflows \
            -d 'ref=beta')
          files_alpha=$(curl -X GET -G \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PRIVATE_GITHUB_BOT_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/contents/.github/workflows \
            -d 'ref=alpha')

          if [[ "$files_beta" == "$files_alpha" ]] ; then
            echo "::set-output name=not_equal::false"
          else
            echo "::set-output name=not_equal::true"
          fi

  update :
    needs : check_workflows
    if : ${{ needs.check_workflows.outputs.should_update == 'true' }}
    runs-on : ubuntu-latest
    steps :
      - uses: actions/checkout@v2
      - name : Get options
        id : options_get
        run : |
          WORKFLOWS=$(ls .github/workflows | grep Module)
          for WORKFLOW in $WORKFLOWS ; do
          CONTEXT=$(echo $WORKFLOW | sed 's/\(\S\+\).yml/{"context":"check (\1)","app_id":null}/')
            CONTEXTS="$CONTEXTS,$CONTEXT"
          done;
          CHECKS="[$(sed 's/^,//g' <<< $CONTEXTS),{\"context\":\"skipped_runs_check\",\"app_id\":null}]"
          echo "::set-output name=options::{\"required_status_checks\":{\"strict\":false,\"checks\":$CHECKS},\"enforce_admins\":false,\"required_pull_request_reviews\":null,\"restrictions\":null}"
      - name : Setup rules
        run : |
          curl -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.PRIVATE_GITHUB_BOT_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/branches/beta/protection \
            -d '${{ steps.options_get.outputs.options }}'
